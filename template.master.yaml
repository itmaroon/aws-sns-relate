AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    LambdaFunction:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X?????????????????????????????????????????????????????????"
            FunctionName: "lambda_x_finalize"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_x_finalize-d99bf797-a95a-4152-b7f5-159777cdb130"
                S3ObjectVersion: "qc8phsN6eyu_XyQMvZPB5cTkzT7Kn3ID"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_x_finalize-role-sncv0l5h"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction2:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "Video?????Instagram????????????????ffmpeg????S3?${S3Bucket}??????????????????"
            Environment: 
                Variables: 
                    JOBS_TABLE: "video_jobs_by_src"
                    UPLOAD_BUCKET: !Ref S3Bucket
            FunctionName: "lambda-convert-worker"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda-convert-worker-591ff0fd-fd34-45eb-a238-1b47ec20f094"
                S3ObjectVersion: "n9FF4jtjfjMDqvQtjHEC2iiPyJ3EiTeQ"
            MemorySize: 1536
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda-convert-worker-role-qdznmpan"
            Runtime: "python3.11"
            Timeout: 600
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ffmpeg-amd64:1"
            EphemeralStorage: 
                Size: 512

    LambdaFunction3:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "Instagram???????????S3??????PUT URL??????GET URL??????????DynamoDB??????????"
            Environment: 
                Variables: 
                    CLIENTS_TABLE: "convert_clients"
                    JOBS_TABLE: !Ref DynamoDBTable
                    KMS_KEY_ID: "alias/ig-token-key"
                    DEFAULT_EXPIRES: "900"
                    IN_BUCKET: !Ref S3Bucket
                    OUT_BUCKET: !Ref S3Bucket2
                    FB_TOKEN_PEPPER: "k3Q9m8r2SxZp1N0u"
                    IN_PREFIX: "in/"
                    REGION: !Ref AWS::Region
            FunctionName: "lambda_presign"
            Handler: "lambda_presign.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_presign-3249f4cb-addf-4009-92b0-3c34a026bf28"
                S3ObjectVersion: "udphzDfVSLnyxOh66DZ9_RKF6H3VExJS"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_presign-role-fesg8sew"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction4:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "convert_job???????????site_url??????????????API  Gateway??/jobs?site_url=?????"
            FunctionName: !Sub "${LambdaFunction18}_status"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/${LambdaFunction18}_status-fdd00cff-10fd-41d4-a2c3-659a03cec0a3"
                S3ObjectVersion: "rBZ54ZF0CIZYOcGPNVLGJBtCbxydEWY3"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/${LambdaFunction18}_status-role-atd5rkx7"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction5:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "DynamoDB?${DynamoDBTable}??????????job_id??????????API Gateway?????"
            FunctionName: "lambda_delete_job"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_delete_job-55683a6e-2123-4112-be94-9b09fcdfc8cc"
                S3ObjectVersion: "b1ZMyDywTkNiIeDyhG_.QEuuQPFzOMeI"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_delete_job-role-6g995amd"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction6:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "SNS?????S3??????????????????????API Gateway?????????????????????????Insta????????????????Insta???????????X???????????????"
            Environment: 
                Variables: 
                    IN_BUCKET: !Ref S3Bucket
                    OUT_BUCKET: !Ref S3Bucket2
            FunctionName: "lambda_cleanup"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_cleanup-8306ce19-815b-452d-a92c-fca71b0f3317"
                S3ObjectVersion: "SMdQ7TWAxdWMU_P3.VP34_zZq63hHaXH"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_cleanup-role-pvgibg6l"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction7:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "Instagram????????????????S3?${S3Bucket2}????????????????????????????????"
            Environment: 
                Variables: 
                    GET_EXPIRES: "3600"
                    SF_IG_POST_ARN: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:IgStateMachine"
                    UPLOAD_PREFIX: "converted/"
            FunctionName: "lambda_convert_notifier"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_convert_notifier-fe12f3ac-faf9-46d9-8f69-83d2d620e40f"
                S3ObjectVersion: "OfmsjHl012PwRTr8Tx_LXjIxIkgFJKKO"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_convert_notifier-role-de3o2da7"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction8:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X???????????????????????????????????????????"
            FunctionName: "lambda_poll_media_status"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_poll_media_status-e98ab434-2e73-4902-b0bb-66f28ea65abb"
                S3ObjectVersion: "hW_2gwyjlSRhxF0wvU8FTRXooHWoslqe"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_poll_media_status-role-3o2e1pe0"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction9:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "Instagram??????????????SNS????????????${DynamoDBTable}?????????????????????????ddb_helper?????????"
            FunctionName: "lambda_check_status"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_check_status-44e7cf48-c157-494d-8c54-238a26629c25"
                S3ObjectVersion: "a4m861WVXU1EBOQ7MmptaMN2km4R51gd"
            MemorySize: 512
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_check_status-role-6ug98ls3"
            Runtime: "python3.11"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ddb-helpers:2"
            EphemeralStorage: 
                Size: 512

    LambdaFunction10:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "Facebook?????????????DynamoDB?????"
            FunctionName: "lambda_token_register"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_token_register-33f9b529-0557-44b7-8dec-a03beb85eedc"
                S3ObjectVersion: "vv2m6skLPy8ifqQOnV4iIsHsMueEEP6i"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_token_register-role-7bbwn2hy"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction11:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "lambda???${DynamoDBTable}?????????????????????????????????"
            FunctionName: "ddb_helpers"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/ddb_helpers-7c2cf846-df81-494e-a53e-5feadc472c0b"
                S3ObjectVersion: "jWsKO.NYDTbELlGJ6Pb5G0LCN5uT7p16"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/ddb_helpers-role-anfqait1"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction12:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X???????convert-job??????????????????"
            Environment: 
                Variables: 
                    KMS_KEY_ID: "alias/ig-token-key"
                    STATE_MACHINE_ARN: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:xStateMachine"
            FunctionName: "lambda_start"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_start-2cf9fb12-138b-4453-899a-12c778b75254"
                S3ObjectVersion: "pHhW1ClZkhMHeCG0AgOUytrGXL6bBWlz"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_start-role-o5k7gdn6"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction13:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "Instagram???????????????????????????????????????????"
            FunctionName: "lambda_ig_publish"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_ig_publish-b0f416c4-4a8c-42dd-8d9e-44354e61401c"
                S3ObjectVersion: "hYcvLVQ6UJLEorX5CK35WY.t5pSwEo62"
            MemorySize: 512
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_ig_publish-role-2oij14o7"
            Runtime: "python3.11"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ddb-helpers:2"
            EphemeralStorage: 
                Size: 512

    LambdaFunction14:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X??????????????????????????????"
            FunctionName: "lambda_x_append"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_x_append-e9517e4b-ce0d-4b0a-b7db-835f8acbcd9b"
                S3ObjectVersion: "7ryj397ezrbyyGeFFfOUfnpwBaWu259t"
            MemorySize: 512
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_x_append-role-ck86pedc"
            Runtime: "python3.11"
            Timeout: 120
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction15:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X???????????????????????SNS??ID????????????????????"
            FunctionName: "lambda_x_initialize"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_x_initialize-ed246fad-56aa-4a3c-a93a-c06e3ba7455b"
                S3ObjectVersion: "QnDcYdG6PT5ee16.mRc56Yhzl7NEUQtI"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_x_initialize-role-gq4o29ov"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    LambdaFunction16:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: "X?????????????????????????????????????????????????????????????"
            FunctionName: "lambda_post_x"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_post_x-cb3ed2a2-dcd7-433e-8892-5656228e7474"
                S3ObjectVersion: "blhY0CGobKfw28OtcBTIdSVH3JkIZAjS"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_post_x-role-no48w33z"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ddb-helpers:2"
            EphemeralStorage: 
                Size: 512

    LambdaFunction17:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "Instagram??????????????????????????${DynamoDBTable}?????????????????????"
            FunctionName: "lambda_create_container"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_create_container-5d4a7a7a-3b42-4ad4-99e4-df7065864d24"
                S3ObjectVersion: "OI7w5n2b4qlP4sh.wVhfISgTiyHFjurA"
            MemorySize: 512
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_create_container-role-tyilgs9v"
            Runtime: "python3.11"
            Timeout: 30
            TracingConfig: 
                Mode: "PassThrough"
            Layers: 
              - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:layer:ddb-helpers:2"
            EphemeralStorage: 
                Size: 512

    LambdaFunction18:
        DeletionPolicy: "Retain"
        Type: "AWS::Lambda::Function"
        Properties:
            Description: !Sub "Instagram???????????????????????${LambdaFunction3}??????${DynamoDBTable}?????????"
            Environment: 
                Variables: 
                    JOBS_TABLE: !Ref DynamoDBTable
            FunctionName: "lambda_get_job"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-ap-ne-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/lambda_get_job-4fd0dd9f-7bdc-4172-940a-3d22ea634408"
                S3ObjectVersion: "xJhk9cbevjVA.x2suzNhwfR2aY3Tz2oY"
            MemorySize: 160
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/lambda_get_job-role-v14vtw1c"
            Runtime: "python3.11"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    S3Bucket:
        DeletionPolicy: "Retain"
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "itmar-video-upload-bucket"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: false
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:*"
                    Filter: 
                        S3Key: 
                            Rules: 
                              - 
                                Name: "Prefix"
                                Value: "in/"
                    Function: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:lambda-convert-worker"
            OwnershipControls: 
                Rules: 
                  - 
                    ObjectOwnership: "BucketOwnerEnforced"
            PublicAccessBlockConfiguration: 
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true

    S3Bucket2:
        DeletionPolicy: "Retain"
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: "itmar-video-converted-bucket"
            BucketEncryption: 
                ServerSideEncryptionConfiguration: 
                  - 
                    ServerSideEncryptionByDefault: 
                        SSEAlgorithm: "AES256"
                    BucketKeyEnabled: false
            NotificationConfiguration: 
                LambdaConfigurations: 
                  - 
                    Event: "s3:ObjectCreated:*"
                    Filter: 
                        S3Key: 
                            Rules: 
                              - 
                                Name: "Prefix"
                                Value: "converted/"
                              - 
                                Name: "Suffix"
                                Value: ".mp4"
                    Function: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:lambda_convert_notifier"
            OwnershipControls: 
                Rules: 
                  - 
                    ObjectOwnership: "BucketOwnerEnforced"
            PublicAccessBlockConfiguration: 
                BlockPublicAcls: true
                BlockPublicPolicy: true
                IgnorePublicAcls: true
                RestrictPublicBuckets: true

    DynamoDBTable:
        DeletionPolicy: "Retain"
        Type: "AWS::DynamoDB::Table"
        Properties:
            AttributeDefinitions: 
              - 
                AttributeName: "job_id"
                AttributeType: "S"
              - 
                AttributeName: "site_url"
                AttributeType: "S"
              - 
                AttributeName: "updated_at"
                AttributeType: "N"
              - 
                AttributeName: "wp_id"
                AttributeType: "S"
            BillingMode: "PAY_PER_REQUEST"
            TableName: "convert_jobs"
            KeySchema: 
              - 
                AttributeName: "job_id"
                KeyType: "HASH"
            GlobalSecondaryIndexes: 
              - 
                IndexName: "wp_id-updated_at-index"
                KeySchema: 
                  - 
                    AttributeName: "wp_id"
                    KeyType: "HASH"
                  - 
                    AttributeName: "updated_at"
                    KeyType: "RANGE"
                Projection: 
                    ProjectionType: "ALL"
                ProvisionedThroughput: 
                    ReadCapacityUnits: 0
                    WriteCapacityUnits: 0
              - 
                IndexName: "site_url-updated_at-index"
                KeySchema: 
                  - 
                    AttributeName: "site_url"
                    KeyType: "HASH"
                  - 
                    AttributeName: "updated_at"
                    KeyType: "RANGE"
                Projection: 
                    ProjectionType: "ALL"
                ProvisionedThroughput: 
                    ReadCapacityUnits: 0
                    WriteCapacityUnits: 0

